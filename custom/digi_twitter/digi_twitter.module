<?php

function digi_twitter_views_default_views() {
  return views_install_view_dir('digi_twitter');
}

/**
 * Implementation of hook_imagecache_default_presets
 */
function digi_twitter_imagecache_default_presets() {
  return digitaria_utility_install_imagecache('digi_twitter');
}

/**
* Implementation of hook_ctools_plugin_api().
*
* Tell CTools that we support the default_mymodule_presets API.
*/
function digi_twitter_ctools_plugin_api($owner, $api) {
  if ($owner == 'context' && $api == 'context') {
    return array('version' => 3);
  }
  if ($owner == 'nodeformcols' && $api == 'nodeformcols_default_presets') {
    return array('version' => 1);
  }
}

/**
* Implementation of hook_nodeformcols_default_preset().
*/
function digi_twitter_nodeformcols_default_preset() {
  $export = digitaria_utility_install_nodeformcols_dir('digi_twitter', 'nodeformcols', 'nodeformcols');
  return $export;
}

/**
* Implementation of hook_context_default_contexts().
*/
function digi_twitter_context_default_contexts() {
  $contexts = digitaria_utility_install_context_dir('digi_twitter');
  return $contexts;
}

/**
 * Implementation of hook_perm().
 */
function digi_twitter_perm() {
  return array('administer twitter');
}

/**
 * Implementation of hook_cron().
 */
function digi_twitter_cron() {
  module_load_include('inc', 'digi_twitter', 'digi_twitter.cron');
  digi_twitter_cron_helper();
}

/**
 * Implementation of hook_init()
 */
function digi_twitter_init() {
    drupal_add_css(drupal_get_path('module', 'digi_twitter') .'/digi_twitter.css');
}


/**
* Implementation of hook_block().
*/
function digi_twitter_block($op = 'list', $delta = 0, $edit = array()) {
  switch($op) {
    case 'list':
      $blocks['digi_twitter_topics'] = array('info' => t("Twitter: Topics"));
      $blocks['digi_twitter_contributors'] = array('info' => t("Twitter: Contributors"));
      $blocks['digi_twitter_archive'] = array('info' => t("Twitter: Archive"));
      $blocks['digi_twitter_join'] = array('info' => t("Twitter: Join Our Conversations"));
      $blocks['digi_twitter_contributor_header'] = array('info' => t("Twitter: Contributor Header"));
      $blocks['digi_twitter_banner'] = array('info' => t("Twitter: Featured Header"));
      $blocks['digi_twitter_tout'] = array('info' => t('Twitter: Tout'));
      $blocks['digi_twitter_latest_tweets'] = array('info' => t('Twitter: Latest Tweets'));
      $blocks['digi_twitter_related_by_tag'] = array('info' => t('Twitter: Related by tags'));
      return $blocks;
      break;
    case 'view':
      static $included = FALSE;
      if (!$included) {
        module_load_include('inc', 'digi_twitter', 'digi_twitter.block');
        $included = TRUE;
      }
      switch($delta) {
        case 'digi_twitter_topics':
           $block['content'] = digi_twitter_block_topics();
          break;
        case 'digi_twitter_contributors':
          $block['content'] = digi_twitter_block_contributors();
          break;
        case 'digi_twitter_archive':
           $block['content'] = digi_twitter_block_archive();
          break;
        case 'digi_twitter_join':
          $block['content'] = digi_twitter_block_join();
          break;
        case 'digi_twitter_contributor_header':
          $block['content'] = digi_twitter_block_contributor_header();
          break;
        case 'digi_twitter_tout':
          $block['content'] = theme('digi_twitter_tout',digi_twitter_tout_args());
          break;
        case 'digi_twitter_banner':
          $block['content'] = theme('qualcomm_featured_content_banner', 'masthead', 'tweet');
          break;
        case 'digi_twitter_latest_tweets':
          $block['content'] = digi_twitter_block_latest_tweets();
          break;
        case 'digi_twitter_related_by_tag':
          $block['content'] = digi_twitter_block_related_by_tag();
          break;
      }
      return $block;
      break;
  }
}


/**
* Implementation of hook_theme().
*/
function digi_twitter_theme() {
  return array(
    'digi_twitter_tout' => array(
      'arguments' => array('args' => null),
      'file' => 'digi_twitter.theme.inc',
    ),
    'digi_twitter_topics_link' => array(
      'arguments' => array('row' => null),
      'file' => 'digi_twitter.theme.inc',
    ),
    'digi_twitter_contributor_link' => array(
      'arguments' => array('row' => null),
      'file' => 'digi_twitter.theme.inc',
    ),
    'digi_twitter_archive_link' => array(
      'arguments' => array('row' => null),
      'file' => 'digi_twitter.theme.inc',
    ),
    'digi_twitter_archive_details_link' => array(
      'arguments' => array('row' => null),
      'file' => 'digi_twitter.theme.inc',
    ),
    'digi_twitter_contributor_detail_link' => array(
      'arguments' => array('row' => null),
      'file' => 'digi_twitter.theme.inc',
    ),
    'digi_twitter_contributor_header' => array(
      'arguments' => array('node' => null),
      'file' => 'digi_twitter.theme.inc',
    ),
    'digi_twitter_tweet_body' => array(
      'arguments' => array('body' => null),
      'file' => 'digi_twitter.theme.inc',
    ),
    'digi_twitter_tweet_teaser' => array(
     'template' => 'twitter-tweet-teaser',
      'arguments' => array(
        'username' => null,
        'body' => null,
        'created' => null,
        'nid' => null
      ),
    ),
    'digi_twitter_related_tweets' => array(
      'arguments' => array(
        'type' => null,
        'arg' => null
      ),
      'file' => 'digi_twitter.theme.inc',
    ),
    'node_tweet_teaser' => array(
     'template' => 'node-tweet-teaser',
      'arguments' => array(
        'username' => NULL,
        'description' => NULL,
        'date' => NULL,
        'time' => NULL,
        'image' => NULL,
        'li_class' => NULL,
      ),
    ),
  );
}

function digi_twitter_tout_args() {
  return array(
    'title' => variable_get('digi_twitter_tout_title', ''),
    'text' => variable_get('digi_twitter_tout_txt', ''),
    'link' => variable_get('digi_twitter_tout_url', ''),
    'image' => (file_exists($_SERVER["DOCUMENT_ROOT"].'/'.variable_get('digi_twitter_tout_image', '')) && variable_get('digi_twitter_tout_image', '')) ? digitaria_imagecache_apply_preset('twitter_tout', variable_get('digi_twitter_tout_image', '')) : FALSE );
}

function digi_twitter_form_alter(&$form, $form_state, $form_id) {
  if($form_id == 'twitter_feed_node_form'){
    //hide certain fields (except for admins);
    global $user;
    if ($user->uid != 1) {
      unset($form['body_field']['format']);
      unset($form['menu']);
      unset($form['author']);
      unset($form['comment_settings']);
    }

    $form['title']['#description'] = 'This data will not appear on the front-end. It simply names the Twitter Feed, and is used for identification in the Content Management Filter in Drupal.';

  }
}

function digi_twitter_banner_args() {
  return array(
    'title' => variable_get('digi_twitter_banner_title', ''),
    'text' => variable_get('digi_twitter_banner_txt', ''),
    'color' => variable_get('digi_twitter_banner_txt_color', '#FFFFFF'),
    'link' => variable_get('digi_twitter_banner_url', ''),
    'image' => (file_exists($_SERVER["DOCUMENT_ROOT"].'/'.variable_get('digi_twitter_banner_image', '')) && variable_get('digi_twitter_banner_image', '')) ? digitaria_imagecache_apply_preset('twitter_banner', variable_get('digi_twitter_banner_image', '')) : FALSE );
}

function _digi_twitter_get_feed_from_alias($alias) {
  $query = "select nid, field_twitter_feed_author_nid
            from content_type_twitter_feed
            where field_twitter_feed_alias_value = '" . $alias . "';";
  $result = db_query($query);

  if ($row = db_fetch_array($result)) {
    $twitter_feed = node_load($row['nid']);
  }

  return $twitter_feed;
}

/**
 * show formal_name if is exists, else use $username
 */
function digi_twitter_get_display_name($username, $formal_name = null, $author_title = null) {
  //get username
  if (!empty($author_title)) {
    $display_name = $author_title;
  }
  elseif (!empty($formal_name)) {
    $display_name = $formal_name;
  }
  else {
    $display_name = $username;
  }

  return $display_name;
}

/**
 * get image for twitter user, first use author objects image, then use twitter feed avatar
 * $avatar can be either a file fid, or a preloaded object
 */
function digi_twitter_get_avatar_image($image_cache_preset, $avatar, $author, $title = null) {

  //if author is set, use author image
  if (isset($author->field_person_headshot[0]['filepath'])) {
    $image = theme('imagecache', $image_cache_preset, $author->field_person_headshot[0]['filepath'], $title);
  }
  else {
    //if avatar is an fid, load the file
    if (is_numeric($avatar)) {
      $avatar = field_file_load($avatar);
    }

    if (!empty($avatar['filepath'])) {
      $image = theme('imagecache', $image_cache_preset, $avatar['filepath'], $title);
    }
  }
  return $image;
}
