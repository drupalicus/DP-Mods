<?php
// $Id$
// @TODO: Build Admin Interface to Manage Config.


/**
 * Implementation of hook_init().
 */
function saic_menu_init() {
  module_load_include('inc', 'saic_menu', 'saic_menu.build');
  module_load_include('inc', 'saic_menu', 'saic_menu.primary');
  module_load_include('inc', 'saic_menu', 'saic_menu.secondary');
  module_load_include('inc', 'saic_menu', 'saic_menu.topnav');
  module_load_include('inc', 'saic_menu', 'saic_menu.featured');
  module_load_include('inc', 'saic_menu', 'saic_menu.action');
}

function get_mid_from_nid($guideNid) {
  $mlid = NULL;
  $result = db_query("SELECT mlid FROM {menu_links} WHERE link_path='%s' order by mlid DESC limit 1", 'node/' . $guideNid);
  if($result )
  {
      $row = db_fetch_array($result);
      $mlid = $row['mlid'];
  }
 return $mlid;
}

function get_mid_from_path($path) {
  $mlid = NULL;
  $result = db_query("SELECT mlid FROM {menu_links} WHERE link_path='%s' order by mlid DESC limit 1", $path);
  if($result )
  {
      $row = db_fetch_array($result);
      $mlid = $row['mlid'];
  }
 return $mlid;
}

/**
 * Return Menu Special Cases
 */
function saic_menu_special_cases($delta) {
  $config = array();
  if($delta == 'primary-links') {
    $config  = array(
      0 => array(
      'weight'=>'2',
      'description'=> 'Menu case for ',
      'arguments'=>array('node_reference'=>'magazine_issue'),
      'actions'=>array('nid_from_field'=>"field_magazine_issue_magazine[0][nid]")),

      1 => array(
      'weight'=>'2',
      'description'=> 'Menu case for ',
      'arguments'=>array('node_reference'=>'magazine_article'),
      'actions'=>array('nid_from_field'=>"field_magazine_article_issue[0][nid]")),

      2 => array(
      'weight'=>'2',
      'description'=> 'Menu case for ',
      'arguments'=>array('href'=>'news\/registerthankyou.*'),
      'actions'=>array('mlid'=>"6157")),

      3 => array(
      'weight'=>'2',
      'description'=> 'Menu case for ',
      'arguments'=>array('custom_pages_args'=>'customerror'),
      'actions'=>array('mlid'=>"6158")),

      4 => array(
      'weight'=>'2',
      'description'=> 'Menu case for ',
      'arguments'=>array('href'=>'news\/resourcesRegister.*'),
      'actions'=>array('mlid'=>"6157")),

      5 => array(
      'weight'=>'2',
      'description'=> 'Menu case for ',
      'arguments'=>array('custom_pages_args'=>'media'),
      'actions'=>array('mlid'=>"1315")),
/*
      6 => array(
      'weight'=>'2',
      'description'=> 'Menu case for ',
      'arguments'=>array('href'=>'search.*'),
      'actions'=>array('mlid'=>SEARCH_MENU_ID)),
*/
      6 => array(
      'weight'=>'2',
      'description'=> 'Menu case for ',
      'arguments'=>array('node_type'=>'resource'),
      'actions'=>array('mlid'=>"6157")),

      7 => array(
      'weight'=>'2',
      'description'=> 'Menu case for ',
      'arguments'=>array('href'=>'error\/error_thanks.*'),
      'actions'=>array('mlid'=>"6158")),

      8 => array(
        'weight'=>'2',
        'description'=> 'Menu case for ',
        'arguments'=>array('node_type'=>'announcement'),
        'actions'=>array(
          'mlid' => "5048",
          'show_children' => 'true',
        ),
      ),

      9 => array(
        'weight'=>'2',
        'description'=> 'Menu case for ',
        'arguments'=>array('node_type'=>'project'),
        'actions'=>array(
          'mlid' => "5047",
          'show_children' => 'true',
        ),
      ),

      10 => array(
        'weight'=>'2',
        'description'=> 'Menu case for ',
        'arguments'=>array('href'=>'eeandi\/articles\/awards'),
        'actions'=>array(
          'mlid' => "5074",
          'show_children' => 'true',
        ),
      ),

      11 => array(
        'weight'=>'2',
        'description'=> 'Menu case for ',
        'arguments'=>array('href'=>'eeandi\/articles'),
        'actions'=>array(
          'mlid' => "7359",
          'show_children' => 'true',
        ),
      ),

      12 => array(
        'weight'=>'2',
        'description'=> 'Menu case for ',
        'arguments'=>array('href'=>'contractcenter\/viewcon'),
        'actions'=>array(
          'mlid' => "6204",
          'show_children' => 'true',
        ),
      ),

      13 => array(
        'weight'=>'2',
        'description'=> 'Menu case for ',
        'arguments'=>array('href'=>'news\/resources'),
        'actions'=>array(
          'mlid' => "6157",
          'show_children' => 'true',
        ),
      ),

    );

  }
  return $config;
}


/**
 * Return Menu Configuration Values
 */
function saic_menu_config($delta) {
  $config = array();
  $config = variable_get('saic_menu-config:' . $delta, NULL);
  return $config;
}


/**
 * Process variables for menu-block-saic_menu_block.tpl.php.
 */
function template_preprocess_saic_menu_block(&$variables) {
  
  $variables['classes_array'][] = 'saic-menu-block';
  $variables['classes_array'][] = 'saic-menu-block-' . $variables['config']['menu_delta'];
  $variables['classes_array'][] = 'menu-name-' . $variables['config']['menu_name'];
  $variables['classes_array'][] = 'menu';

  $variables['classes'] = check_plain(implode(' ', $variables['classes_array']));
  $variables['template_files'][] = 'saic-menu-block-' . $variables['config']['menu_delta'];
}


/**
 * Process variables for menu-block-saic_menu_block-item.tpl.php.
 */
function template_preprocess_saic_menu_block_item(&$variables) {
  // Submenu system for the main navigation 
  if ($variables['config']['menu_delta'] == 'topnav') {
    // Get submenu content item by mlid
    $saic_submenu = saic_menu_block_submenu($variables['branch']['mlid']);
    $variables['submenu'] = $saic_submenu['content'];
  }
  if ($variables['branch']['in_active_trail']) {
    $variables['link_classes'] = 'active-trail';
    if ($variables['branch']['active_item']) {
      $variables['link_classes'] .= ' active';
    }
  }
  else {
    $variables['link_classes'] = 'not-active';
  }
  $variables['branch']['classes_array'][] = 'saic-menu-block-item';
  $variables['branch']['classes_array'][] = 'saic-menu-block-item-' . $variables['branch']['depth'];

  $variables['classes'] = check_plain(implode(' ', $variables['branch']['classes_array']));
  $variables['template_files'][] = 'saic-menu-block-item-' . $variables['config']['menu_delta'];
}


/**
 * Implementation fo hook_theme()
 */
function saic_menu_theme(&$existing, $type, $theme, $path) {
  $existing['menu_tree']['pattern'] = 'menu_tree__';
  $existing['menu_item']['pattern'] = 'menu_item__';
  $existing['menu_item_link']['pattern'] = 'menu_item_link__';

  return array(
    'saic_menu_block' => array(
      'template' => 'saic-menu-block',
      'arguments' => array(
        'tree' => NULL,
        'config' => NULL,
        'content' => NULL),
      'pattern' => 'saic_menu_block__',
    ),
    'saic_menu_block_item' => array(
      'template' => 'saic-menu-block-item',
      'arguments' => array(
        'branch' => NULL,
        'config' => NULL,
        'content' => NULL),
      'pattern' => 'saic_menu_block_item__',
    ),
    'saic_menu_admin_form' => array(
      'arguments' => array('form' => NULL),
    ),
  );
}


/**
 * Implementation of hook_block()
 */
function saic_menu_block($op = 'list', $delta = 0, $edit = array()) {
  $return = array();

  switch ($op) {
    case 'list':
      $return['saic_menu_primary']          = array('info' => t('Primary Links'));
      $return['saic_menu_secondary']        = array('info' => t('Secondary Links'));
      $return['saic_menu_topnav']           = array('info' => t('Top Navigation'));
      $return['saic_menu_submenu']          = array('info' => t('Submenu Navigation'));
      $return['saic_menu_featured_nav']     = array('info' => t('Featured Navigation'));
      break;

    case 'view':
      switch ($delta) {
    
        case 'saic_menu_breadcrumb':
          $return['content'] = theme('breadcrumb', drupal_get_breadcrumb());
          break 2;

        case 'saic_menu_primary':
          $return = saic_menu_block_primary();
          break 2;

        case 'saic_menu_featured_nav':
          $return = saic_menu_block_featured();
          break 2;

        case 'saic_menu_topnav':
          $return = saic_menu_block_topnav();
          break 2;

        case 'saic_menu_submenu':
          $return = saic_menu_block_submenu();
          break 2;
      }
      break;
  }

  return $return;
}

/**
* Implementation of hook_menu().
*/
function saic_menu_menu() {
  $items = array();

  $items['admin/settings/saic-nav'] = array(
    'title' => 'SAIC Navigation',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('saic_menu_settings_form'),
    'access arguments' => array('administer site configuration'),
    'file' => 'saic_menu.admin.inc',
    'type' => MENU_NORMAL_ITEM,
  );

  return $items;
}

/**
 * Implementation of hook_nodeapi().
 */
function saic_menu_nodeapi(&$node, $op, $teaser, $page) {
  switch ($op) {
    case 'insert':
    case 'update':
    case 'delete':
      // Clear the menu cache when a node has been altered.
      $menu_name = array();
      if (isset($node->field_left_menu_opt)) {
        // If the left_menu_opt field exists, check to see if the selected menu has changed.
        $old_node = node_load($node->nid);
        $menu_name[] = $old_node->field_left_menu_opt[0]['value'];
      }
      $menu_name[] = $node->menu['menu_name'];
      saic_menu_cache_clear($menu_name);
      break;
  }
}


/**
 * Clear saic_menu cache.
 *
 * @param $menu_name (array or string).
 */
function saic_menu_cache_clear($menu_name) {
  if (!is_array($menu_name)) {
    $menus = array($menu_name);
  }
  else {
    // Flip the array to prevent duplicates.
    $menus = $menu_name;
  }

  // Clear the menu cache.
  foreach($menus as $m) {
    db_query('
      DELETE FROM {cache_menu}
      WHERE cid LIKE "saic_menu:%s%%"',
    $m);
  }
}


/**
 * Check if a menu should be rendered for this node page.
 */
function saic_menu_block_render_check($menu_name,$menu_delta = NULL) {

  $url_array = explode('/',$_SERVER['REQUEST_URI']);
  // Only check nodes.
  if ('node' == arg(0) && preg_match('/[0-9]+/', arg(1))) {
    $node = node_load(arg(1));
    if (saic_check_left_menu($node) == FALSE && 'primary-links' == $menu_delta) {
      return FALSE;
    }
  }

  else if('primary-links' == $menu_delta && ($_SERVER['REQUEST_URI'] == '/media/browse' || $_SERVER['REQUEST_URI'] == '/news/saicmag' || $_SERVER['REQUEST_URI'] == '/media') ) {  
    return FALSE;
  }  
  elseif (arg(0) =='news' && arg(1) =='list') {
    return FALSE;
  }
  return TRUE;
}


/**
 * Evaluate a variable and return either its value, or the sum of its value to another value
 *   $val (int) The Default value OR the value to use as delta
 *   $mod (int|str) The variable to evaluate
 */
function _saic_menu_eval_vals($val, $mod) {
  $return = NULL;
  if (is_null($mod)) {
    $return = $val;
  }
  else {
    if (!preg_match('/^[+-][0-9]+$/', $mod)) {
      $return = $mod;
    }
    else {
      $return  = eval("return " . $val . $mod . ";");
    }
  }
  return $return;
}


/**
 * Sort the Menu Config by weight
 */
function _saic_menu_sort_config($a, $b) {
  if ($a['weight'] == $b['weight']) {
    return 0;
  }
  return ($a['weight'] < $b['weight']) ? -1 : 1;
}
